<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zikezhi.dao.CommentsMapper" >
  <resultMap id="BaseResultMap" type="com.zikezhi.entity.Comments" >
    <id column="commentsUid" property="commentsuid" jdbcType="VARCHAR" />
    <result column="commentsId" property="commentsid" jdbcType="INTEGER" />
    <result column="userUid" property="useruid" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="likeCount" property="likecount" jdbcType="INTEGER" />
    <result column="createdTime" property="createdtime" jdbcType="TIMESTAMP" />
    <result column="topicType" property="topictype" jdbcType="VARCHAR" />
    <result column="parentUid" property="parentuid" jdbcType="VARCHAR" />
    <result column="delFlag" property="delflag" jdbcType="TINYINT" />
    <result column="level" property="level" jdbcType="VARCHAR" />
    <result column="path" property="path" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="ip" property="ip" jdbcType="VARCHAR" />
    <result column="postkey" property="postkey" jdbcType="VARCHAR" />
    <result column="unlikeCount" property="unlikecount" jdbcType="INTEGER" />
    <result column="activity" property="activity" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    commentsUid, commentsId, userUid, content, likeCount, createdTime, topicType, parentUid, 
    delFlag, level, path, remark, ip, postkey, unlikeCount
  </sql>

  <select id="selectByNew" resultMap="BaseResultMap" parameterType="java.util.Map">
    SELECT
    <include refid="Base_Column_List" />
    FROM comments
    order by createdtime desc
    <if test="start!=null and size!=null">
      limit #{start},#{size}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from comments
    where commentsUid = #{commentsuid,jdbcType=VARCHAR}
  </select>
  <select id="selectCountUser" resultType="java.lang.Integer" parameterType="java.lang.String">
  	select count(0)	from comments where userUid = #{uid,jdbcType=VARCHAR}
  </select>
  <select id="selectLimit" resultMap="BaseResultMap" >
  	select <include refid="Base_Column_List"/>
  	from comments
  	order by createdTime desc limit 0, 20
  </select>
  <select id="selectByTopicType" resultMap="BaseResultMap" parameterType="java.lang.String">
  	select
    <include refid="Base_Column_List" />
    from comments
    where topicType = #{uid,jdbcType=VARCHAR} order by commentsId asc
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from comments
    where commentsUid = #{commentsuid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.zikezhi.entity.Comments" >
    insert into comments (commentsUid, commentsId, userUid, 
      content, likeCount, createdTime, 
      topicType, parentUid, delFlag, 
      level, path, remark, unlikeCount,
      ip, postkey, activity)
    values (#{commentsuid,jdbcType=VARCHAR}, #{commentsid,jdbcType=INTEGER}, #{useruid,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{likecount,jdbcType=INTEGER}, #{createdtime,jdbcType=TIMESTAMP}, 
      #{topictype,jdbcType=VARCHAR}, #{parentuid,jdbcType=VARCHAR}, #{delflag,jdbcType=TINYINT}, 
      #{level,jdbcType=VARCHAR}, #{path,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{ip,jdbcType=VARCHAR}, #{postkey,jdbcType=VARCHAR},#{unlikecount, jdbcType=INTEGER)
  </insert>
  <insert id="insertSelective" parameterType="com.zikezhi.entity.Comments" >
    insert into comments
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="commentsuid != null" >
        commentsUid,
      </if>
      <if test="commentsid != null" >
        commentsId,
      </if>
      <if test="useruid != null" >
        userUid,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="likecount != null" >
        likeCount,
      </if>
      <if test="createdtime != null" >
        createdTime,
      </if>
      <if test="topictype != null" >
        topicType,
      </if>
      <if test="parentuid != null" >
        parentUid,
      </if>
      <if test="delflag != null" >
        delFlag,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="path != null" >
        path,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="ip != null" >
        ip,
      </if>
      <if test="postkey != null" >
        postkey,
      </if>
      <if test="activity != null" >
        activity,
      </if>
      <if test="unlikecount != null">
      	unlikeCount
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="commentsuid != null" >
        #{commentsuid,jdbcType=VARCHAR},
      </if>
      <if test="commentsid != null" >
        #{commentsid,jdbcType=INTEGER},
      </if>
      <if test="useruid != null" >
        #{useruid,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="likecount != null" >
        #{likecount,jdbcType=INTEGER},
      </if>
      <if test="createdtime != null" >
        #{createdtime,jdbcType=TIMESTAMP},
      </if>
      <if test="topictype != null" >
        #{topictype,jdbcType=VARCHAR},
      </if>
      <if test="parentuid != null" >
        #{parentuid,jdbcType=VARCHAR},
      </if>
      <if test="delflag != null" >
        #{delflag,jdbcType=TINYINT},
      </if>
      <if test="level != null" >
        #{level,jdbcType=VARCHAR},
      </if>
      <if test="path != null" >
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="ip != null" >
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="postkey != null" >
        #{postkey,jdbcType=VARCHAR},
      </if>
      <if test="unlikecount != null">
      	#{unlikecount, jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zikezhi.entity.Comments" >
    update comments
    <set >
      <if test="commentsid != null" >
        commentsId = #{commentsid,jdbcType=INTEGER},
      </if>
      <if test="useruid != null" >
        userUid = #{useruid,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="likecount != null" >
        likeCount = #{likecount,jdbcType=INTEGER},
      </if>
      <if test="createdtime != null" >
        createdTime = #{createdtime,jdbcType=TIMESTAMP},
      </if>
      <if test="topictype != null" >
        topicType = #{topictype,jdbcType=VARCHAR},
      </if>
      <if test="parentuid != null" >
        parentUid = #{parentuid,jdbcType=VARCHAR},
      </if>
      <if test="delflag != null" >
        delFlag = #{delflag,jdbcType=TINYINT},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=VARCHAR},
      </if>
      <if test="path != null" >
        path = #{path,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="ip != null" >
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="postkey != null" >
        postkey = #{postkey,jdbcType=VARCHAR},
      </if>
      <if test="activity != null" >
        activity = #{activity,jdbcType=VARCHAR},
      </if>
      <if test="unlikecount != null">
      	unlikeCount = #{unlikecount, jdbcType=INTEGER},
      </if>
    </set>
    where commentsUid = #{commentsuid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zikezhi.entity.Comments" >
    update comments
    set commentsId = #{commentsid,jdbcType=INTEGER},
      userUid = #{useruid,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      likeCount = #{likecount,jdbcType=INTEGER},
      createdTime = #{createdtime,jdbcType=TIMESTAMP},
      topicType = #{topictype,jdbcType=VARCHAR},
      parentUid = #{parentuid,jdbcType=VARCHAR},
      delFlag = #{delflag,jdbcType=TINYINT},
      level = #{level,jdbcType=VARCHAR},
      path = #{path,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      postkey = #{postkey,jdbcType=VARCHAR},
      activity = #{activity,jdbcType=VARCHAR},
      unlikeCount = #{unlikecount, jdbcType=INTEGER}
    where commentsUid = #{commentsuid,jdbcType=VARCHAR}
  </update>
</mapper>